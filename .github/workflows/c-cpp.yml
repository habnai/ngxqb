name: C/C++ CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: self-hosted

    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        submodules: recursive
    - name: Configure PCRE2
      run: ./pcre2-10.42/configure
    - name: Configure NGINX-QUIC
      working-directory: ./nginx-quic
      run: ./auto/configure `nginx -V 2>&1 | sed "s/ \-\-/ \\\ \n\t--/g" | grep "\-\-" | grep -ve opt= -e param= -e build=` --build=nginx-quic --prefix=/etc/nginx --sbin-path=/usr/sbin/nginx --conf-path=/etc/nginx/nginx.conf --modules-path=/etc/nginx/modules --error-log-path=/var/log/nginx/error.log --http-log-path=/var/log/nginx/access.log --pid-path=/var/run/nginx.pid --lock-path=/var/run/nginx.lock --http-client-body-temp-path=/var/cache/nginx/client_temp --http-proxy-temp-path=/var/cache/nginx/proxy_temp --http-fastcgi-temp-path=/var/cache/nginx/fastcgi_temp --http-uwsgi-temp-path=/var/cache/nginx/uwsgi_temp --http-scgi-temp-path=/var/cache/nginx/scgi_temp --user=www-data --group=www-data --with-compat --with-file-aio --with-threads --with-http_auth_request_module --with-http_dav_module --with-http_gunzip_module --with-http_gzip_static_module --with-http_mp4_module --with-http_realip_module --with-http_ssl_module --with-http_stub_status_module --with-http_v2_module --with-http_v3_module --with-http_image_filter_module --with-http_dav_module --with-http_stub_status_module --with-http_slice_module --with-mail --with-mail_ssl_module --with-stream --with-stream_realip_module --with-stream_ssl_module --with-stream_ssl_preread_module --with-stream_quic_module --with-pcre=../pcre2-10.42 --with-openssl=../openssl --with-openssl-opt=enable-ktls --with-openssl-opt=enable-fips --add-module=../ngx_brotli --with-cc-opt='-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wp,-D_FORTIFY_SOURCE=2 -fPIC' --with-ld-opt='-Wl,-Bsymbolic-functions -Wl,-z,relro -Wl,-z,now -Wl,--as-needed -pie'
    - name: Build NGINX-QUIC
      working-directory: ./nginx-quic
      run: make -j4
    - name: Create archive
      run: mkdir archive; cd archive; mkdir -p etc/nginx/{dh,modules,sites-available,sites-disabled,conf.d,html} var/cache/nginx/{client_temp,proxy_temp,fastcgi_temp,uwsgi_temp,scgi_temp} var/log/nginx var/www/html sbin lib/systemd/system; cp -r ../nginx-quic/conf/. etc/nginx/; cp -r ../nginx-quic/docs/html/. etc/nginx/html/; cp ../nginx-quic/objs/nginx sbin/nginx; cp ../nginx.service lib/systemd/system/nginx.service; zip -r nginx.zip *
